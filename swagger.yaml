swagger: "2.0"
info:
  version: 1.0.0
  title: "Cardinal Instructor Dashboard"
  description: |
      The goal of this project is to provide more granular insights and visibility for instructors into student understanding of the learning objectives covered within their course sections.  Included within this supporting the following needs:
     
  termsOfService: http://swagger.io/terms/
  contact:
    name: Pearson Cardinal Dashboard API
    email: Chadwick.reimers@pearson.com
    url: https://github.com/PearsonEducation/CardinalInstructordashboardAPIspec
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: apiary.io
basePath: /v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  OAuth2:
      type: oauth2
      flow: accessCode
      authorizationUrl: https://int-piapi-internal.stg-openclass.com/authorize
      tokenUrl: https://int-piapi-internal.stg-openclass.com/tokens
      scopes:
        read: Grants read access
        write: Grants write access
        admin: Grants read and write access to administrative information
paths:
  /{system}/analytics/{contextType}/{ContextID}/{factType}/{factID}/:
    get:
      description: |
        Returns the facts associated with a given context.
        Examples: /revel/analytics/course/courseid/learningobjective/2094702384/mastery/watson
      operationId: GetFacts
      parameters:
        - name: system
          in: path
          description: the system we are requesting data from.  possible values "revel", "XL", "MX"
          required: true
          type: string
        - name: contextType
          in: path
          description: contextType
          required: true
          type: string 
        - name: ContextID
          in: path
          description: ContextID
          required: true
          type: string 
        - name: factType
          in: path
          description: factType
          required: true
          type: string  
        - name: factID
          in: path
          description: factID
          required: true
          type: string                   
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: fact response
          schema:
            type: array
            items:
              $ref: '#/definitions/Fact'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
   
  /{system}/analytics{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: find pet by id
      parameters:
        - name: system
          in: path
          description: the system we are requesting data from.  possible values "revel", "XL", "MX"
          required: true
          type: string
        - name: id
          in: path
          description: ID of fact to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: pet response
          schema:
            $ref: '#/definitions/Fact'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes 
      operationId: delete
      parameters:
        - name: system
          in: path
          description: the system we are requesting data from.  possible values "revel", "XL", "MX"
          required: true
          type: string
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Fact:
    allOf:
      - $ref: '#/definitions/NewFact'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewFact:
    required:
      - name
    properties:
      name:
        type: string
      tag:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string